name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      PIP_NO_CACHE_DIR: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pip install ruff mypy pytest

      - name: Lint (ruff)
        run: python -m ruff check .

      - name: Type check (mypy)
        run: python -m mypy .

      - name: Run tests
        run: python -m pytest -q

  docker-build:
    needs: build-test
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: nl2sql-copilot

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR (via GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build -t "$IMAGE" .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Push image
        run: docker push "$IMAGE"

      - name: Tag 'latest' and push
        run: |
          LATEST=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          docker tag "$IMAGE" "$LATEST"
          docker push "$LATEST"
